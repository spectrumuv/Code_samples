#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/mobility-module.h"
#include "ns3/lte-module.h"
#include "ns3/internet-module.h"
#include "ns3/applications-module.h"
#include "ns3/log.h"

using namespace ns3;

NS_LOG_COMPONENT_DEFINE("SingleCellSingleUe");

void TxPacketTrace(std::string context, Ptr<const Packet> packet) {
    std::cout<<Simulator::Now().GetSeconds()<<"s: Packet transmitted from "<<context<<std::endl;
}

void RxPacketTrace(std::string context, Ptr<const Packet> packet) {
    std::cout<<Simulator::Now().GetSeconds()<<"s: Packet received at "<<context<<std::endl;
}

int main(int argc, char *argv[]) {

    LogComponentEnable("SingleCellSingleUe", LOG_LEVEL_INFO);
    LogComponentEnable("LteHelper", LOG_LEVEL_INFO);
    //LogComponentEnable("LteUePhy", LOG_LEVEL_INFO);
    //LogComponentEnable("LteEnbPhy", LOG_LEVEL_INFO);


    Ptr<LteHelper> lteHelper = CreateObject<LteHelper>();

    NodeContainer enbNodes, ueNodes;
    enbNodes.Create(1);
    ueNodes.Create(1);

    MobilityHelper mobility;

    mobility.SetMobilityModel("ns3::ConstantPositionMobilityModel");

    mobility.Install(enbNodes);
    mobility.Install(ueNodes);

    Ptr<MobilityModel> enbMobility = enbNodes.Get(0)->GetObject<MobilityModel>();
    enbMobility->SetPosition(Vector(0.0,0.0,0.0));

    Ptr<MobilityModel> ueMobility = ueNodes.Get(0)->GetObject<MobilityModel>();
    ueMobility->SetPosition(Vector(100.0,0.0,0.0));
 
    NetDeviceContainer enbLteDevs = lteHelper->InstallEnbDevice(enbNodes);
    NetDeviceContainer ueLteDevs = lteHelper->InstallUeDevice(ueNodes);

    lteHelper->Attach(ueLteDevs, enbLteDevs.Get(0));

    InternetStackHelper internet;
    internet.Install(ueNodes);
    internet.Install(enbNodes);

    Ipv4AddressHelper ipv4;
    ipv4.SetBase("10.1.1.0", "255.255.255.0");
    Ipv4InterfaceContainer ueIpIface = ipv4.Assign(ueLteDevs);

    uint16_t port = 9;
    UdpServerHelper udpServer(port);
    ApplicationContainer serverApp = udpServer.Install(ueNodes.Get(0));
    serverApp.Start(Seconds(1.0));
    serverApp.Stop(Seconds(10.0));

    UdpClientHelper udpClient(ueIpIface.GetAddress(0),port);
    udpClient.SetAttribute("MaxPackets", UintegerValue(2));
    udpClient.SetAttribute("Interval", TimeValue(MilliSeconds(100)));
    udpClient.SetAttribute("PacketSize", UintegerValue(1024));

    ApplicationContainer clientApp = udpClient.Install(enbNodes.Get(0));
    clientApp.Start(Seconds(2.0));
    clientApp.Stop(Seconds(10.0));

    lteHelper->EnableTraces();

    enbLteDevs.Get(0)->TraceConnect("PhyRxEnd","eNB",MakeCallback(&RxPacketTrace));
    ueLteDevs.Get(0)->TraceConnect("PhyTxEnd","UE",MakeCallback(&TxPacketTrace));
    
    Simulator::Stop(Seconds(10.0));
    Simulator::Run();
    Simulator::Destroy();

    return 0;
}

./ns3 run scratch/singlecell_singleue.cc
[0/2] Re-checking globbed directories...
ninja: no work to do.








ninja: no work to do.




























^CProcess was interrupted by the user
