class Solution {
public:
    int mod = 1e9 + 7;
    vector<int> fact{102};

    int modmul(int a,int b) {
        return((long long)(a%mod)*(b%mod))%mod;
    }

    int binExpo(int a,int b) {
        if(!b) return 1;
        int res = binExpo(a,b/2);
        if(b&1) {
            return modmul(a,modmul(res,res));
        }
        else {
            return modmul(res,res);
        }
    }
    int modmulinv(int a) {
        return binExpo(a,mod-2);
    }

    void getfact() {
        fact[0]=1;
        for(int i=1;i<=99;i++) {
            fact[i]=modmul(fact[i-1],i);
        }
    }
    int count_word(string word) {
        vector<int> char_count(26,0);
        for(char c : word) {
            char_count[c-'a']++;
        } 
        int p=1;
        int count = fact[word.size()];
        for(int i=0;i<26;i++) {
            if(char_count[i]>1) {
                p=modmul(p,fact[char_count[i]]);
            }
        }
        return modmul(count,modmulinv(p));
    }
    int countAnagrams(string s) {
        getfact();
        long long count = 1;
        vector<string> words;
        string word="";
        for(int i=0;i<s.length();i++) {
            if(s[i]==' ') {
                words.push_back(word);
                word="";
            }
            else {
                word=word+s[i];
            }
        }
        words.push_back(word);
        for(string word : words) {
            int c = count_word(word);
            count = modmul(count,c);
        }

        return count % mod;
    }
};

Line 27: Char 20:
=================================================================
==22==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x502000000014 at pc 0x558e2737e2e0 bp 0x7ffd1791d920 sp 0x7ffd1791d918
WRITE of size 4 at 0x502000000014 thread T0
    #0 0x558e2737e2df in Solution::getfact() solution.cpp:27:20
    #1 0x558e2737d92a in Solution::countAnagrams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>) solution.cpp:27:9
    #2 0x558e2737d67a in __DriverSolution__::__helper__(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>) solution.cpp:27:28
    #3 0x558e2737cdf6 in main solution.cpp:27:40
    #4 0x7f96593131c9  (/lib/x86_64-linux-gnu/libc.so.6+0x2a1c9) (BuildId: 6d64b17fbac799e68da7ebd9985ddf9b5cb375e6)
    #5 0x7f965931328a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2a28a) (BuildId: 6d64b17fbac799e68da7ebd9985ddf9b5cb375e6)
    #6 0x558e272a68e4 in _start (solution+0xae8e4)
0x502000000014 is located 0 bytes after 4-byte region [0x502000000010,0x502000000014)
allocated by thread T0 here:
    #0 0x558e2737a50d in operator new(unsigned long) /root/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:86:3
    #1 0x558e2737d5a0 in allocate /usr/lib/gcc/x86_64-linux-gnu/14/../../../../include/c++/14/bits/new_allocator.h:151:27
    #2 0x558e2737d5a0 in allocate /usr/lib/gcc/x86_64-linux-gnu/14/../../../../include/c++/14/bits/allocator.h:196:32
    #3 0x558e2737d5a0 in allocate /usr/lib/gcc/x86_64-linux-gnu/14/../../../../include/c++/14/bits/alloc_traits.h:478:20
    #4 0x558e2737d5a0 in _M_allocate /usr/lib/gcc/x86_64-linux-gnu/14/../../../../include/c++/14/bits/stl_vector.h:380:20
    #5 0x558e2737d5a0 in _M_range_initialize<const int *> /usr/lib/gcc/x86_64-linux-gnu/14/../../../../include/c++/14/bits/stl_vector.h:1694:14
    #6 0x558e2737d5a0 in vector /usr/lib/gcc/x86_64-linux-gnu/14/../../../../include/c++/14/bits/stl_vector.h:682:2
    #7 0x558e2737d5a0 in Solution solution.cpp:27:21
    #8 0x558e2737d5a0 in __DriverSolution__::__helper__(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>) solution.cpp:27:17
    #9 0x558e2737cdf6 in main solution.cpp:27:40
    #10 0x7f96593131c9  (/lib/x86_64-linux-gnu/libc.so.6+0x2a1c9) (BuildId: 6d64b17fbac799e68da7ebd9985ddf9b5cb375e6)
    #11 0x7f965931328a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2a28a) (BuildId: 6d64b17fbac799e68da7ebd9985ddf9b5cb375e6)
    #12 0x558e272a68e4 in _start (solution+0xae8e4)
SUMMARY: AddressSanitizer: heap-buffer-overflow solution.cpp:27:20 in Solution::getfact()
Shadow bytes around the buggy address:
  0x501ffffffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x501ffffffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x501ffffffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x501fffffff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x501fffffff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x502000000000: fa fa[04]fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==22==ABORTING
